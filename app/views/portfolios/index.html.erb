<nav class="navbar navbar-toggleable-md navbar-inverse slide slide-one" id="navbar">
  <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <div class="collapse navbar-collapse nav-height" id="navbarTogglerDemo02 nav-text">
    <ul class="navbar-nav ml-auto">
      <li class="nav-item neg-margin">
        <a href="#about" class="nav-link">ABOUT</a>
      </li>
      <li class="nav-item neg-margin">
        <a href="#web-apps" class="nav-link">APPS</a>
      </li>
      <li class="nav-item neg-margin">
        <a href="#code-samples" class="nav-link">CODE</a>
      </li>
      <li class="nav-item neg-margin">
        <a href="#skills-and-tools" class="nav-link">SKILLS</a>
      </li>
      <li class="nav-item neg-margin link-right">
        <a href="#hire-me" class="nav-link">CONTACT</a>
      </li>
    </ul>
  </div>
</nav>



<div class="about-container" id="about">
  <div class="about">
    <div id="startchange"></div>
    <%= image_tag "me.jpg", class: 'me' %>
    <h1>Jay Johnson</h1>
    <br />
    <h2 class="bigger">Software Engineer</h2>
    <hr class="grey"/>
    <p class="bio">
      I'm a dedicated developer, passionate about tackling new challenges and learning new things.  I have studied Ruby on Rails, HTML, CSS, Javascript, SQL, RSpec, Pry, and more.  I am a recent graduate of The Firehose Project.  I'm ranked 3rd place in my Code Wars clan out of 75.  I enjoy what I do, and I would like to work with you.  Let's create new things together!
    </p>
  </div>
</div>

<br class="clear" />

<h3 id="web-apps" class="anchor-padding">Web Apps</h3>
<hr class="yellow" />
<div class="text-center">
  <%= link_to "See All Projects", all_path, class: "btn btn-primary" %>
</div>
<br class="clear" />
<div class="box">
  <h4>Two-Sided Market Place</h4>
  <%= link_to image_tag('flixter.png'), "https://flixter-jay-johnson.herokuapp.com/", class: "full-width" %>
  <p>
    A two-sided, video-streaming marketplace platform that
    features credit card payment capabilities, user role
    management, complex user interfaces, and advanced
    database relationships.
  </p>
</div>
<div class="box">
  <h4>Helping The Homeless</h4>
  <%= link_to image_tag('helping.png'), "http://passion-jay-johnson.herokuapp.com/", class: "full-width" %>
  <p>
    This is an app I made to help those who are homeless connect with people that wish to help.  It is 
    a resource for people in need, and a way for
    compassionate individuals to connect with and help others.  
    It allows users to send messages to each other, 
    receive emails notifications, search for resources, and
    share their stories.  I built the messaging system from scratch. 
  </p>
</div>
<br class="clear" />
<div class="box">
  <h4>Agile Team Project</h4>
  <%= link_to image_tag('chess.png'), "https://dreamteam-chess.herokuapp.com/", class: "full-width" %>
  <p class="text">
    I worked on an Agile software development team building
    a chess application. Under the guidance of a senior software engineer,
    we had weekly Agile team meetings for code reviews, sprint planning,
    and feature assignments.  I found and corrected numerous bugs using Pry.
  </p>
</div>
<div class="box">
  <h4>Test Driven Development</h4>
  <%= link_to image_tag('grammable.png'), "https://grammable-jay-johnson.herokuapp.com/", class: "full-width" %>
  <p>
    An Instagram clone that was built using industry-standard, test-driven
    development following numerous red/green/refactor cycles.
  </p>
</div>
<br class="clear" />
 <div class="box">
  <h4>Edward Snowden Leak Generator</h4>
  <%= link_to image_tag('snowden.png'), "http://snowden-jay-johnson.herokuapp.com/", class: "full-width" %>
  <p>
    This app utilizes an API that I created.  I use an ajax get request
    to the json endpoint, and load a random quote from the famous
    NSA whistleblower Edward Snowden.
  </p>
</div>
<div class="box">
  <h4>Yelp Clone</h4>
  <%= link_to image_tag('nomster.png'), "https://yelpers-jay-johnson.herokuapp.com/", class: "full-width" %>
  <p>
    A Yelp clone that integrates with the Google Maps API
    and includes features like user comments, star ratings,
    image uploading, and user authentication.
  </p>
</div>

<br class="clear" />

<h3 id="code-samples" class="anchor-padding">Code Snippets</h3>
<hr class="yellow">
<div class='text-center'>
  <%= link_to "Currently ranked 3rd(out of 75) place in The Firehose Project clan on Codewars", "https://www.codewars.com/users/jayj10080", class: "btn btn-primary" %>
</div>

<div class="box">
  <h4>Image Blur with Manhattan Distance</h4>
<p>
  The Manhattan Distance is the distance between two points in a grid based on a strictly horizontal and/or vertical path (that is, along the grid lines), as opposed to the diagonal or "as the crow flies" distance.  This ruby algorithm takes a multidimensional array and finds all the ones.  It will then change all the zeroes within a Manhattan Distance into ones.  
</p>
</div>

<div class="box">
  <pre class="shorter"><code class="language-ruby">  class Image
    attr_accessor :image

    def initialize(image)
      @image = image
    end 

    def array_of_ones
      @index_of_1 = []
      image.each_with_index do |row, row_index|
        row.each_with_index do |pixel, col_index|
          if pixel == 1
            @index_of_1.push([row_index, col_index])
          end
        end
      end 
      p @index_of_1
    end

    def output_image1
      image.each do |x| 
        puts x.join
      end
    end

    def touples(n)
      @array_of_touples = []
      @n = n + 1
      @n.times do |x|
        @n.times do |y|
          if x + y &lt; @n
            @array_of_touples &lt;&lt; [x, y]
            @array_of_touples &lt;&lt; [-x, y]
            @array_of_touples &lt;&lt; [-x, -y]
            @array_of_touples &lt;&lt; [x, -y]
          end
        end
      end
      p @array_of_touples
    end

    def transform3 
      @index_of_1.each do |touple|
        row_index, col_index = touple
        blur3(row_index, col_index)
      end
    end

    def blur3(row_index, col_index)
      @array_of_touples.each do |touple|
        x, y = touple
        first_row = image[0]

        new_row_index = row_index + x
        new_col_index = col_index + y
        max_row_length = image.length - 1
        max_col_length = first_row.length-1

        if new_row_index &lt; 0
          new_row_index = 0
        end

        if new_row_index &gt; max_row_length
          new_row_index = max_row_length
        end

        if new_col_index &lt; 0
          new_col_index = 0
        end

        if new_col_index &gt; max_col_length
          new_col_index = max_col_length
        end

        image[new_row_index][new_col_index] = 1
      end
    end
  end 

  i = Image.new([
    [0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0],    
    [0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 1]
  ])

  i.array_of_ones
  i.touples(3)
  i.transform3
  i.output_image1
  </code></pre>
</div>

<br class="clear" />

<div class="box">
  <pre class="shorter"><code class="language-ruby">  class LinkedListNode
    attr_accessor :value, :next_node
    def initialize(value, next_node=nil)
      @value = value
      @next_node = next_node
    end
  end

  def print_values(print_this)
    if print_this
      print &quot;#{print_this.value} --&gt; &quot;
      print_values(print_this.next_node)
    else
      print &quot;nil\n&quot;
    end
  end

  class Stack
    attr_accessor :data
    def initialize
      @data = nil
    end
    
    def push(push_this)
      @data = LinkedListNode.new(push_this, @data)
    end
  end

  def reverse_list(reverse_this)
    reversed = Stack.new
    while reverse_this != nil
      reversed.push(reverse_this.value)
      reverse_this = reverse_this.next_node
    end
    reversed.data
  end

  def reverse_list2(list, previous=nil)
    while list != nil                       
      old_next_node = list.next_node        
      list.next_node = previous                                 
      previous = list                       
      list = old_next_node                  
    end
    return previous
  end
    
  node1 = LinkedListNode.new(37)
  node2 = LinkedListNode.new(99, node1)
  node3 = LinkedListNode.new(12, node2)

  print_values(node3)
  p rev = reverse_list(node3)
  print_values(rev)
  rev2 = reverse_list2(node3)
  print_values(rev2)


  </code></pre>
</div>

<div class="box">
  <h4>Linked List</h4>
  <p>
    This algorithm creates a linked list.  It also reverses the linked list with a stack, and without a stack.
  </p>
</div>

<br class="clear" />
<div class="box">
  <h4>Depth First Search</h4>
  <p>
    This algorithm uses recursion to search for a particular node in a tree.
  </p>
</div>

<div class="box">
  <pre class="shorter"><code class="language-ruby">  class Tree
    attr_accessor :payload, :children

    def initialize(payload, children)
      @payload = payload
      @children = children
    end

    def dfs_11
      puts @payload                               
      return self if @payload == 11         
      @children.each do |child|              
        var1 = child.dfs_11                                  
        if var1 == nil                       
          else
            return var1
          end
      end
      return nil                             
    end
  end

  deep_fifth_node = Tree.new(5, [])
  eleventh_node = Tree.new(11, [])
  fourth_node   = Tree.new(4, [])

  ninth_node = Tree.new(9, [fourth_node])
  sixth_node = Tree.new(6, [deep_fifth_node, eleventh_node])
  seventh_node = Tree.new(7, [sixth_node])
  shallow_fifth_node = Tree.new(5, [ninth_node])

  trunk   = Tree.new(2, [seventh_node, shallow_fifth_node])

  p trunk.dfs_11</code></pre>
</div>

<br class="clear" />
<h3 id="skills-and-tools" class="anchor-padding">Skills &amp; Tools</h3>
<hr class="yellow" />
<div class="text-center">
  <%= link_to "Certifications", certifications_path, class: "btn btn-primary" %>
</div>
<p class="skills-and-tools">
  I have developed proficiency and expertise
  in the following programming languages and
  comfort with the following tools.
</p>
<div class="icons">
  <%= image_tag "github.png", class: 'icon' %>
  <%= image_tag "rubocop.png", class: 'icon' %>
  <%= image_tag "rspec.png", class: 'icon' %>
  <%= image_tag "pry.png", class: 'special-icon' %>
  <%= image_tag "heroku.png", class: 'icon' %>
  <br class="clear" />
  <%= image_tag "skills.png", class: 'icon' %>
</div>
<div class="contact-me" id="hire-me">
  <h3 class="contact-headline">Contact</h3>
  <hr class="yellow" />
  <p class="contact-info">
    Let's work together.
    Please get in touch via email:
  </p>
  <p>
    <a href="mailto:jayj10080@gmail.com" class="contact-link">
      jayj10080@gmail.com
    </a>
    <br />
    <a href="https://github.com/jayj10080" class="contact-link">
    My Github
    </a>
  </p>
</div>


<script type="text/javascript">
  // Select all links with hashes
  $('a[href*="#"]')
    // Remove links that don't actually link to anything
    .not('[href="#"]')
    .not('[href="#0"]')
    .click(function(event) {
      // On-page links
    if (
      location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') 
      && 
      location.hostname == this.hostname
    ) {
      // Figure out element to scroll to
      var target = $(this.hash);
      target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
      // Does a scroll target exist?
      if (target.length) {
        // Only prevent default if animation is actually gonna happen
        event.preventDefault();
        $('html, body').animate({
          scrollTop: target.offset().top
        }, 1000, function() {
          // Callback after animation
          // Must change focus!
          var $target = $(target);
          $target.focus();
          if ($target.is(":focus")) { // Checking if the target was focused
            return false;
          } else {
            $target.attr('tabindex','-1'); // Adding tabindex for elements not focusable
            $target.focus(); // Set focus again
          };
        });
      }
    }
  });
</script>


<script type="text/javascript">
  /* http://prismjs.com/download.html?themes=prism&languages=markup+css+clike+javascript&plugins=line-highlight */
var _self="undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(){var e=/\blang(?:uage)?-(\w+)\b/i,t=0,n=_self.Prism={util:{encode:function(e){return e instanceof a?new a(e.type,n.util.encode(e.content),e.alias):"Array"===n.util.type(e)?e.map(n.util.encode):e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).match(/\[object (\w+)\]/)[1]},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++t}),e.__id},clone:function(e){var t=n.util.type(e);switch(t){case"Object":var a={};for(var r in e)e.hasOwnProperty(r)&&(a[r]=n.util.clone(e[r]));return a;case"Array":return e.map&&e.map(function(e){return n.util.clone(e)})}return e}},languages:{extend:function(e,t){var a=n.util.clone(n.languages[e]);for(var r in t)a[r]=t[r];return a},insertBefore:function(e,t,a,r){r=r||n.languages;var i=r[e];if(2==arguments.length){a=arguments[1];for(var l in a)a.hasOwnProperty(l)&&(i[l]=a[l]);return i}var o={};for(var s in i)if(i.hasOwnProperty(s)){if(s==t)for(var l in a)a.hasOwnProperty(l)&&(o[l]=a[l]);o[s]=i[s]}return n.languages.DFS(n.languages,function(t,n){n===r[e]&&t!=e&&(this[t]=o)}),r[e]=o},DFS:function(e,t,a,r){r=r||{};for(var i in e)e.hasOwnProperty(i)&&(t.call(e,i,e[i],a||i),"Object"!==n.util.type(e[i])||r[n.util.objId(e[i])]?"Array"!==n.util.type(e[i])||r[n.util.objId(e[i])]||(r[n.util.objId(e[i])]=!0,n.languages.DFS(e[i],t,i,r)):(r[n.util.objId(e[i])]=!0,n.languages.DFS(e[i],t,null,r)))}},plugins:{},highlightAll:function(e,t){var a={callback:t,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};n.hooks.run("before-highlightall",a);for(var r,i=a.elements||document.querySelectorAll(a.selector),l=0;r=i[l++];)n.highlightElement(r,e===!0,a.callback)},highlightElement:function(t,a,r){for(var i,l,o=t;o&&!e.test(o.className);)o=o.parentNode;o&&(i=(o.className.match(e)||[,""])[1].toLowerCase(),l=n.languages[i]),t.className=t.className.replace(e,"").replace(/\s+/g," ")+" language-"+i,o=t.parentNode,/pre/i.test(o.nodeName)&&(o.className=o.className.replace(e,"").replace(/\s+/g," ")+" language-"+i);var s=t.textContent,u={element:t,language:i,grammar:l,code:s};if(n.hooks.run("before-sanity-check",u),!u.code||!u.grammar)return n.hooks.run("complete",u),void 0;if(n.hooks.run("before-highlight",u),a&&_self.Worker){var c=new Worker(n.filename);c.onmessage=function(e){u.highlightedCode=e.data,n.hooks.run("before-insert",u),u.element.innerHTML=u.highlightedCode,r&&r.call(u.element),n.hooks.run("after-highlight",u),n.hooks.run("complete",u)},c.postMessage(JSON.stringify({language:u.language,code:u.code,immediateClose:!0}))}else u.highlightedCode=n.highlight(u.code,u.grammar,u.language),n.hooks.run("before-insert",u),u.element.innerHTML=u.highlightedCode,r&&r.call(t),n.hooks.run("after-highlight",u),n.hooks.run("complete",u)},highlight:function(e,t,r){var i=n.tokenize(e,t);return a.stringify(n.util.encode(i),r)},tokenize:function(e,t){var a=n.Token,r=[e],i=t.rest;if(i){for(var l in i)t[l]=i[l];delete t.rest}e:for(var l in t)if(t.hasOwnProperty(l)&&t[l]){var o=t[l];o="Array"===n.util.type(o)?o:[o];for(var s=0;s<o.length;++s){var u=o[s],c=u.inside,g=!!u.lookbehind,h=!!u.greedy,f=0,d=u.alias;if(h&&!u.pattern.global){var p=u.pattern.toString().match(/[imuy]*$/)[0];u.pattern=RegExp(u.pattern.source,p+"g")}u=u.pattern||u;for(var m=0,y=0;m<r.length;y+=(r[m].matchedStr||r[m]).length,++m){var v=r[m];if(r.length>e.length)break e;if(!(v instanceof a)){u.lastIndex=0;var b=u.exec(v),k=1;if(!b&&h&&m!=r.length-1){if(u.lastIndex=y,b=u.exec(e),!b)break;for(var w=b.index+(g?b[1].length:0),_=b.index+b[0].length,A=m,S=y,P=r.length;P>A&&_>S;++A)S+=(r[A].matchedStr||r[A]).length,w>=S&&(++m,y=S);if(r[m]instanceof a||r[A-1].greedy)continue;k=A-m,v=e.slice(y,S),b.index-=y}if(b){g&&(f=b[1].length);var w=b.index+f,b=b[0].slice(f),_=w+b.length,x=v.slice(0,w),O=v.slice(_),j=[m,k];x&&j.push(x);var N=new a(l,c?n.tokenize(b,c):b,d,b,h);j.push(N),O&&j.push(O),Array.prototype.splice.apply(r,j)}}}}}return r},hooks:{all:{},add:function(e,t){var a=n.hooks.all;a[e]=a[e]||[],a[e].push(t)},run:function(e,t){var a=n.hooks.all[e];if(a&&a.length)for(var r,i=0;r=a[i++];)r(t)}}},a=n.Token=function(e,t,n,a,r){this.type=e,this.content=t,this.alias=n,this.matchedStr=a||null,this.greedy=!!r};if(a.stringify=function(e,t,r){if("string"==typeof e)return e;if("Array"===n.util.type(e))return e.map(function(n){return a.stringify(n,t,e)}).join("");var i={type:e.type,content:a.stringify(e.content,t,r),tag:"span",classes:["token",e.type],attributes:{},language:t,parent:r};if("comment"==i.type&&(i.attributes.spellcheck="true"),e.alias){var l="Array"===n.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(i.classes,l)}n.hooks.run("wrap",i);var o="";for(var s in i.attributes)o+=(o?" ":"")+s+'="'+(i.attributes[s]||"")+'"';return"<"+i.tag+' class="'+i.classes.join(" ")+'"'+(o?" "+o:"")+">"+i.content+"</"+i.tag+">"},!_self.document)return _self.addEventListener?(_self.addEventListener("message",function(e){var t=JSON.parse(e.data),a=t.language,r=t.code,i=t.immediateClose;_self.postMessage(n.highlight(r,n.languages[a],a)),i&&_self.close()},!1),_self.Prism):_self.Prism;var r=document.currentScript||[].slice.call(document.getElementsByTagName("script")).pop();return r&&(n.filename=r.src,document.addEventListener&&!r.hasAttribute("data-manual")&&("loading"!==document.readyState?window.requestAnimationFrame?window.requestAnimationFrame(n.highlightAll):window.setTimeout(n.highlightAll,16):document.addEventListener("DOMContentLoaded",n.highlightAll))),_self.Prism}();"undefined"!=typeof module&&module.exports&&(module.exports=Prism),"undefined"!=typeof global&&(global.Prism=Prism);
Prism.languages.markup={comment:/<!--[\w\W]*?-->/,prolog:/<\?[\w\W]+?\?>/,doctype:/<!DOCTYPE[\w\W]+?>/,cdata:/<!\[CDATA\[[\w\W]*?]]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\\1|\\?(?!\1)[\w\W])*\1|[^\s'">=]+))?)*\s*\/?>/i,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=(?:('|")[\w\W]*?(\1)|[^\s>]+)/i,inside:{punctuation:/[=>"']/}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},Prism.hooks.add("wrap",function(a){"entity"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,"&"))}),Prism.languages.xml=Prism.languages.markup,Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup;
Prism.languages.css={comment:/\/\*[\w\W]*?\*\//,atrule:{pattern:/@[\w-]+?.*?(;|(?=\s*\{))/i,inside:{rule:/@[\w-]+/}},url:/url\((?:(["'])(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,selector:/[^\{\}\s][^\{\};]*?(?=\s*\{)/,string:/("|')(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1/,property:/(\b|\B)[\w-]+(?=\s*:)/i,important:/\B!important\b/i,"function":/[-a-z0-9]+(?=\()/i,punctuation:/[(){};:]/},Prism.languages.css.atrule.inside.rest=Prism.util.clone(Prism.languages.css),Prism.languages.markup&&(Prism.languages.insertBefore("markup","tag",{style:{pattern:/(<style[\w\W]*?>)[\w\W]*?(?=<\/style>)/i,lookbehind:!0,inside:Prism.languages.css,alias:"language-css"}}),Prism.languages.insertBefore("inside","attr-value",{"style-attr":{pattern:/\s*style=("|').*?\1/i,inside:{"attr-name":{pattern:/^\s*style/i,inside:Prism.languages.markup.tag.inside},punctuation:/^\s*=\s*['"]|['"]\s*$/,"attr-value":{pattern:/.+/i,inside:Prism.languages.css}},alias:"language-css"}},Prism.languages.markup.tag));
Prism.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\w\W]*?\*\//,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0}],string:{pattern:/(["'])(\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[a-z0-9_\.\\]+/i,lookbehind:!0,inside:{punctuation:/(\.|\\)/}},keyword:/\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,"boolean":/\b(true|false)\b/,"function":/[a-z0-9_]+(?=\()/i,number:/\b-?(?:0x[\da-f]+|\d*\.?\d+(?:e[+-]?\d+)?)\b/i,operator:/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,punctuation:/[{}[\];(),.:]/};
Prism.languages.javascript=Prism.languages.extend("clike",{keyword:/\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/,number:/\b-?(0x[\dA-Fa-f]+|0b[01]+|0o[0-7]+|\d*\.?\d+([Ee][+-]?\d+)?|NaN|Infinity)\b/,"function":/[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*(?=\()/i,operator:/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*\*?|\/|~|\^|%|\.{3}/}),Prism.languages.insertBefore("javascript","keyword",{regex:{pattern:/(^|[^\/])\/(?!\/)(\[.+?]|\\.|[^\/\\\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})]))/,lookbehind:!0,greedy:!0}}),Prism.languages.insertBefore("javascript","string",{"template-string":{pattern:/`(?:\\\\|\\?[^\\])*?`/,greedy:!0,inside:{interpolation:{pattern:/\$\{[^}]+\}/,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:Prism.languages.javascript}},string:/[\s\S]+/}}}),Prism.languages.markup&&Prism.languages.insertBefore("markup","tag",{script:{pattern:/(<script[\w\W]*?>)[\w\W]*?(?=<\/script>)/i,lookbehind:!0,inside:Prism.languages.javascript,alias:"language-javascript"}}),Prism.languages.js=Prism.languages.javascript;
!function(){function e(e,t){return Array.prototype.slice.call((t||document).querySelectorAll(e))}function t(e,t){return t=" "+t+" ",(" "+e.className+" ").replace(/[\n\t]/g," ").indexOf(t)>-1}function n(e,n,i){for(var o,a=n.replace(/\s+/g,"").split(","),l=+e.getAttribute("data-line-offset")||0,d=r()?parseInt:parseFloat,c=d(getComputedStyle(e).lineHeight),s=0;o=a[s++];){o=o.split("-");var u=+o[0],m=+o[1]||u,h=document.createElement("div");h.textContent=Array(m-u+2).join(" \n"),h.setAttribute("aria-hidden","true"),h.className=(i||"")+" line-highlight",t(e,"line-numbers")||(h.setAttribute("data-start",u),m>u&&h.setAttribute("data-end",m)),h.style.top=(u-l-1)*c+"px",t(e,"line-numbers")?e.appendChild(h):(e.querySelector("code")||e).appendChild(h)}}function i(){var t=location.hash.slice(1);e(".temporary.line-highlight").forEach(function(e){e.parentNode.removeChild(e)});var i=(t.match(/\.([\d,-]+)$/)||[,""])[1];if(i&&!document.getElementById(t)){var r=t.slice(0,t.lastIndexOf(".")),o=document.getElementById(r);o&&(o.hasAttribute("data-line")||o.setAttribute("data-line",""),n(o,i,"temporary "),document.querySelector(".temporary.line-highlight").scrollIntoView())}}if("undefined"!=typeof self&&self.Prism&&self.document&&document.querySelector){var r=function(){var e;return function(){if("undefined"==typeof e){var t=document.createElement("div");t.style.fontSize="13px",t.style.lineHeight="1.5",t.style.padding=0,t.style.border=0,t.innerHTML="&nbsp;<br />&nbsp;",document.body.appendChild(t),e=38===t.offsetHeight,document.body.removeChild(t)}return e}}(),o=0;Prism.hooks.add("complete",function(t){var r=t.element.parentNode,a=r&&r.getAttribute("data-line");r&&a&&/pre/i.test(r.nodeName)&&(clearTimeout(o),e(".line-highlight",r).forEach(function(e){e.parentNode.removeChild(e)}),n(r,a),o=setTimeout(i,1))}),window.addEventListener&&window.addEventListener("hashchange",i)}}();
</script>

<script type="text/javascript"> 
Prism.languages.ruby = {
  'comment': /#[^\r\n]*(\r?\n|$)/g,
  'string': /("|')(\\?.)*?\1/g,
  'regex': {
    pattern: /(^|[^/])\/(?!\/)(\[.+?]|\\.|[^/\r\n])+\/[gim]{0,3}(?=\s*($|[\r\n,.;})]))/g,
    lookbehind: true
  },
  'keyword': /\b(alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|raise|redo|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\b/g,
  'builtin': /\b(Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|File|Fixnum|Fload|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\b/,
  'boolean': /\b(true|false)\b/g,
  'number': /\b-?(0x)?\d*\.?\d+\b/g,
  'operator': /[-+]{1,2}|!|=?&lt;|=?&gt;|={1,2}|(&amp;){1,2}|\|?\||\?|\*|\//g,
  'inst-var': /[@&]\b[a-zA-Z_][a-zA-Z_0-9]*[?!]?\b/g,
  'symbol': /:\b[a-zA-Z_][a-zA-Z_0-9]*[?!]?\b/g,
  'const': /\b[A-Z][a-zA-Z_0-9]*[?!]?\b/g,
  'ignore': /&(lt|gt|amp);/gi,
  'punctuation': /[{}[\];(),.:]/g
};
</script>

<script type="text/javascript">
  $(document).ready(function(){       
   var scroll_start = 0;
   var startchange = $('#startchange');
   var offset = startchange.offset();
   $(document).scroll(function() { 
      scroll_start = $(this).scrollTop();
      if(scroll_start > offset.top) {
        $('#navbar').css({
          'background-color': '#f4f4f4',
          'transition': 'background-color 1s ease-in 0s'
        });
        $('.navbar-inverse .navbar-nav .nav-link').css({
          'color': 'black'
        });
      } 
      else {
        $('#navbar').css({
          'background-color': 'transparent',
          'transition': 'background-color 1s ease-in 0s'
        });
        $('.navbar-inverse .navbar-nav .nav-link').css({
          'color': 'white',
          'transition': 'background-color 1s ease-in 0s'
        });
      }
   });
});
</script>

